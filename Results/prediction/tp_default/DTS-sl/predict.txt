 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), 
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `stadium` ( Stadium_ID
CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `stadium` ( Stadium_ID
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `concert`CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3,
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `stadium` ( Stadium_ID
 CREATE TABLE `concert`CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), 
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3, East Fife, Bay
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `singer_in_concert`
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `singer_in_concert`
 CREATE TABLE `singer_in_concert` ( concert_ID INT PRIMARY KEY REFERENCES concert(concert_ID), Singer_ID TEXT PRIMARY KEY REFERENCES singer(Singer_ID) ); Sample rows from `singer_in_concert`: (1, 2), (1, 3), (1, 5), CREATE TABLE `concert`CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool
 CREATE TABLE `singer_in_concert` ( concert_ID INT PRIMARY KEY REFERENCES concert(concert_ID), Singer_ID TEXT PRIMARY KEY REFERENCES singer(Singer_ID) ); Sample rows from `singer_in_concert`: (1, 2), (1, 3), (1, 5), CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `singer_in_concert`
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `singer_in_concert`
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Country TEXT, Song_Name TEXT, Song_release_year TEXT, Age INT, Is_male bool ); Sample rows from `singer`: (1, Joe Sharp, Netherlands, You, 1992, 52, F), (2, Timbaland, United States, Dangerous, 2008, 32, T), (3, Justin Brown, France, Hey Oh, 2013, 29,
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `stadium` ( Stadium_ID
 CREATE TABLE `concert` ( concert_ID INT PRIMARY KEY, concert_Name TEXT, Theme TEXT, Stadium_ID TEXT REFERENCES stadium(Stadium_ID), Year TEXT ); Sample rows from `concert`: (1, Auditions, Free choice, 1, 2014), (2, Super bootcamp, Free choice 2, 2, 2014), (3, Home Visits, Bleeding Love, 2, 2015), CREATE TABLE `stadium` ( Stadium_ID
 CREATE TABLE `concert`CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3,
 CREATE TABLE `concert`CREATE TABLE `stadium` ( Stadium_ID INT PRIMARY KEY, Location TEXT, Name TEXT, Capacity INT, Highest INT, Lowest INT, Average INT ); Sample rows from `stadium`: (1, Raith Rovers, Stark's Park, 10104, 4812, 1294, 2106), (2, Ayr United, Somerset Park, 11998, 2363, 1057, 1477), (3,
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(3) ); Sample rows from `student`: (1001, Smith, Linda, 18, F, 600, 1121, BAL), (1002, Kim, Tracy, 19, F, 600, 7712, HKG), (1003, Jones
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.0), (2002, dog, 2, 13.4), (2003, dog, 1, 9.3), 
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `pets` ( PetID INTEGER, PetType VARCHAR(20), pet_age INTEGER, weight REAL ); Sample rows from `pets`: (2001, cat, 3, 12.
 CREATE TABLE `has_pet` ( StuID INTEGER REFERENCES Student(StuID), PetID INTEGER REFERENCES Pets(PetID) ); Sample rows from `has_pet`: (1001, 2001), (1002, 2002), (1002, 2003), CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(
 CREATE TABLE `student` ( StuID INTEGER, LName VARCHAR(12), Fname VARCHAR(12), Age INTEGER, Sex VARCHAR(1), Major INTEGER, Advisor INTEGER, city_code VARCHAR(3) ); Sample rows from `student`: (1001, Smith, Linda, 18, F, 600, 1121, BAL), (1002, Kim, Tracy, 19, F, 600, 7712, HKG), (1003, Jones
 SELECT * FROM continents;CREATE TABLE `continents` ( ContId INTEGER, Continent TEXT ); Sample rows from `continents`: (1, america), (2, europe), (3, asia), 
 SELECT COUNT(*) AS Count FROMcontinents; Sample rows from output: (1), CREATE TABLE `continents` ( ContId INTEGER, Continent TEXT ); Sample rows from `continents`: (1, america), (2, europe), (3, asia), 
 
 SELECT * FROMcontinents;CREATE TABLE `continents` ( ContId INTEGER, Continent TEXT ); Sample rows from `continents`: (1, america), (2, europe), (3, asia), 
CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), 
CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), 
 
 CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horse
 
 Using `cars_data`,`car_names`,CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350
 Using `cars_data`, how can one find the model of the car whose weight is below the average weight.CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 197
CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horse
 
 
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 SELECT DISTINCT Model FROM car_names WHERE Id INSELECT Id FROM cars_data WHERE Year > 1980; 
CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 Using 9.5CREATE TABLE `continents` ( ContId INTEGER, Continent TEXT ); Sample rows from `continents`: (1, america), (2, europe), (3, asia), CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2),
 
 SELECT countries.CountryName, COUNT(car_makers.Maker) as Count FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country; Sample rows from output: (CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), CREATE TABLE `car_makers` ( Id INTEGER,
 
 CREATE TABLE `car_names` ( MakeId INTEGER, Model TEXT REFERENCES model_list(Model), Make TEXT ); Sample rows from `car_names`: (1, chevrolet, chevrolet chevelle malibu), (2, buick, buick skylark 320), (3, plymouth, plymouth satellite), CREATE TABLE `model_list` ( ModelId INTEGER, Maker INTEGER REFERENCES car_makers(Id), Model TEXT PRIMARY KEY ); Sample rows from `model_list`: (1, am
 Creating a database table for cars data.CREATE TABLE `car_names` ( MakeId INTEGER, Model TEXT REFERENCES model_list(Model), Make TEXT ); Sample rows from `car_names`: (1, chevrolet, chevrolet chevelle malibu), (2, buick, buick skylark 320), (3, plymouth, plymouth satellite), CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample
 
 
 SELECT CarMakers.Country FROM CarMakers WHERE CarMakers.Country = 2;CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), 
 CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (
 
 
 Using cars_data,CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165
 
 
CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horse
 Ok, soCREATE TABLE `car_names` ( MakeId INTEGER, Model TEXT REFERENCES model_list(Model), Make TEXT ); Sample rows from `car_names`: (1, chevrolet, chevrolet chevelle malibu), (2, buick, buick skylark 320), (3, plymouth, plymouth satellite), CREATE TABLE `model_list` ( ModelId INTEGER, Maker INTEGER REFERENCES car_makers(Id), Model TEXT PRIMARY KEY ); Sample rows from `model_list`: (
CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (
 Using 3 tables,CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor
 Creating a new table called cars_data. CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.
 
 SELECT Cars.Data.Year, Cars.Data.WeightCREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.
 
 CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1),
 Creating a new table `manufacturers` with the following creation statement:CREATE TABLE `manufacturers` ( Id INTEGER, Country INTEGER REFERENCES countries(CountryId), Maker TEXT PRIMARY KEY ); Sample rows from `manufacturers`: (1, 1, ford), (2, 1, hilmer), (3, 2, audi), 
 SELECT * FROM `cars_data` WHERE Cylinders = 3;CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15
 SELECT * FROM `cars_data` WHERE Cylinders = 3 AND Horsepower = CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (
 Ok, lets create a new table called cars_data. CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8,
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 Creating a table called `cars_data` from `cars`,CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 
 Using `cars_data`, what is the maximum accelerate for all the different cylinders?CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 
 Creating a table of cars_data.CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0
 SELECT * FROM model_list;CREATE TABLE `model_list` ( ModelId INTEGER, Maker INTEGER REFERENCES car_makers(Id), Model TEXT PRIMARY KEY ); Sample rows from `model_list`: (1, 1, amc), (2, 2, audi), (3, 3, bmw), 
 Creating a new table `CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 
 SELECT * FROM cars_data; 
 UsingCREATE TABLE `car_names` ( MakeId INTEGER, Model TEXT REFERENCES model_list(Model), Make TEXT ); Sample rows from `car_names`: (1, chevrolet, chevrolet chevelle malibu), (2, buick, buick skylark 320), (3, plymouth, plymouth satellite), CREATE TABLE `model_list` ( ModelId INTEGER, Maker INTEGER REFERENCES car_makers(Id), Model TEXT PRIMARY KEY ); Sample rows from `model_list`: (1,
CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horse
CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horse
 
 SELECT * FROM car_names WHERE Maker=1 AND Weight>3500; 
CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horse
 
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 SELECT * FROM cars_data;CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0,
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 SELECT * FROM `cars_data`; Sample rows from `cars_data`: (Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER);CREATE TABLE `car_names` ( MakeId INTEGER, Model TEXT REFERENCES model_list(Model), Make TEXT ); Sample rows from `car_names`: (1, chevrolet, chevrolet chevelle malibu), (2, buick, bu
CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 
 
 
CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 Creating a new table cars_dataCREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0,
 CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0, 165, 3693
 SELECT CarNames.MakeId, CarNames.Make TEXT FROM CarNames JOIN Cars Data ON CarNames.MakeId = Cars Data.Id WHERE Cars Data.Horsepower < 180 AND Cars Data.Cylinders < CREATE TABLE `car_names` ( MakeId INTEGER, Model TEXT REFERENCES model_list(Model), Make TEXT ); Sample rows from `car_names`: (1, chevrolet, chevrolet chevelle malibu), (2, buick, buick skylark 320), (3,
 SELECT * FROM cars_data;CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.0, 1970), (2, 15, 8, 350.0,
 
 SELECT * FROM `car_names` WHERE MakeId INSELECT Id FROM `car_makers` WHERE CountryId = 1;CREATE TABLE `cars_data` ( Id INTEGER REFERENCES car_names(MakeId), MPG TEXT, Cylinders INTEGER, Edispl REAL, Horsepower TEXT, Weight INTEGER, Accelerate REAL, Year INTEGER ); Sample rows from `cars_data`: (1, 18, 8, 307.0, 130, 3504, 12.
 CREATE TABLE `car_names` ( MakeId INTEGER, Model TEXT REFERENCES model_list(Model), Make TEXT ); Sample rows from `car_names`: (1, chevrolet, chevrolet chevelle malibu), (2, buick, buick skylark 320), (3, plymouth, plymouth satellite), CREATE TABLE `model_list` ( ModelId INTEGER, Maker INTEGER REFERENCES car_makers(Id), Model TEXT PRIMARY KEY ); Sample rows from `model_list`: (1, am
 What are the name of the countries where there is not a single car maker?,CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car
CREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American Motor Company, 1),
 SELECT * FROM `car_makers`; Sample rows from `car_makers`: (1, amc, American Motor Company, 1), (2, volkswagen, Volkswagen, 2), (3, bmw, BMW, 2), CREATE TABLE `car_makers`CREATE TABLE `model_list` ( ModelId INTEGER, Maker INTEGER REFERENCES car_makers(Id), Model TEXT PRIMARY KEY ); Sample rows from `model_list`: (1, 1, amc),
 
 
 SELECT CountryId, CountryNameCREATE TABLE `countries` ( CountryId INTEGER, CountryName TEXT, Continent INTEGER REFERENCES continents(ContId) ); Sample rows from `countries`: (1, usa, 1), (2, germany, 2), (3, france, 2), CREATE TABLE `car_makers` ( Id INTEGER, Maker TEXT, FullName TEXT, Country TEXT REFERENCES countries(CountryId) ); Sample rows from `car_makers`: (1, amc, American
 SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways',CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 OkCREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode) ); Sample rows from `flights`: (1, 28, APG, ASY), (1, 29, ASY, APG), (1, 44, CVO, ACV), CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, Airport
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), 
 What is the name of the airport in the city of Aberdeen in the country of United States?CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 Using airlines,CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (
CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), 
 What tables are in the airports table?CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), 
CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), 
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 Ok, soCREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY
 Okay, let's create a new database schema. CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode) ); Sample rows from `flights`: (1, 28, APG, ASY), (1, 29, ASY, APG), (1, 44, CVO, ACV), CREATE TABLE `airports` (
 
CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 N/ACREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY,
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 Using airlines, airports, and flights tables, how many flights fly from Aberdeen to Ashley?,CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States
 Ok,CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(Airport
 CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode) ); Sample rows from `flights`: (1, 28, APG, ASY), (1, 29, ASY, APG), (1, 44, CVO, ACV), CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation
 
 I am going to use the airlines database. CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), Dest
 SELECT * FROM flights WHERE Airline = 1 AND SourceAirport = 'AHD'; 
 SELECT COUNT(*) AS Countofflights FROM flights WHERE SourceAirport = 'AHD'; 
CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 Using airlines, airports, and flights tables, how many United Airlines flights arrive in Aberdeen. 
 Okay, what aboutCREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY
 Using airports,CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 SELECT * FROM airports;CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), 
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 
 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 SELECT * FROM flights WHERE DestAirport = 'AHD'; 
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 SELECT * FROM airlines WHERE Airline NOT IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG' ); 
CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode)
 Ok,CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation TEXT, Country TEXT ); Sample rows from `airlines`: (1, United Airlines, UAL, USA), (2, US Airways, USAir, USA), (3, Delta Airlines, Delta, USA), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(Airport
 
 Creating TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode) ); Sample rows from `flights`: (1, 28, APG, ASY), (1, 29, ASY, APG), (1, 44, CVO, ACV), CREATE TABLE `airlines` ( uid INTEGER, Airline TEXT, Abbreviation
 
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 Okay, creating a database of flights arriving at Airport "APG"CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 SELECT * FROM flights WHERE SourceAirport = 'APG'; Sample rows in subset:CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo INTEGER PRIMARY KEY, SourceAirport TEXT REFERENCES airports(AirportCode), DestAirport TEXT REFERENCES airports(AirportCode) ); Sample rows from `flights`: (1, 28, APG, ASY), (1, 29, ASY, APG), (1, 44, CVO, ACV),
 
 Okay, soCREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY
 
 CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY, FlightNo
 Ok,CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY,
 Okay,CREATE TABLE `airports` ( City TEXT, AirportCode TEXT PRIMARY KEY, AirportName TEXT, Country TEXT, CountryAbbrev TEXT ); Sample rows from `airports`: (Aberdeen, APG, Phillips AAF, United States, US ), (Aberdeen, ABR, Municipal, United States, US), (Abilene, DYS, Dyess AFB, United States, US), CREATE TABLE `flights` ( Airline INTEGER PRIMARY KEY,
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), CREATE TABLE `evaluation` ( Employee_ID TEXT PRIMARY KEY REFERENCES employee(Employee_ID), Year_awarded TEXT PRIMARY KEY, Bonus REAL ); Sample rows from `evaluation`: (1, 201
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), CREATE TABLE `evaluation` ( Employee_ID TEXT PRIMARY KEY REFERENCES employee(Employee_ID), Year_awarded TEXT PRIMARY KEY, Bonus REAL ); Sample rows from `evaluation`: (1, 201
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), CREATE TABLE `evaluation` ( Employee_ID TEXT PRIMARY KEY REFERENCES employee(Employee_ID), Year_awarded TEXT PRIMARY KEY, Bonus REAL ); Sample rows from `evaluation`: (1, 201
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), CREATE TABLE `evaluation` ( Employee_ID TEXT PRIMARY KEY REFERENCES employee(Employee_ID), Year_awarded TEXT PRIMARY KEY, Bonus REAL ); Sample rows from `evaluation`: (1, 201
 CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample rows from `employee`: (1, George Chuter, 23, Bristol), (2, Lee Mears, 29, Bath), (3, Mark Regan, 43, Bristol), 
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `evaluation` ( Employee_ID TEXT PRIMARY KEY REFERENCES employee(Employee_ID), Year_awarded TEXT PRIMARY KEY, Bonus REAL ); Sample rows from `evaluation`: (1, 2011, 3000.0), (2, 2015, 3200.0), (1, 2016, 2900.0), 
 CREATE TABLE `evaluation` ( Employee_ID TEXT PRIMARY KEY REFERENCES employee(Employee_ID), Year_awarded TEXT PRIMARY KEY, Bonus REAL ); Sample rows from `evaluation`: (1, 2011, 3000.0), (2, 2015, 3200.0), (1, 2016, 2900.0), 
 CREATE TABLE `hiring` ( Shop_ID INT REFERENCES shop(Shop_ID), Employee_ID INT PRIMARY KEY REFERENCES employee(Employee_ID), Start_from TEXT, Is_full_time bool ); Sample rows from `hiring`: (1, 1, 2009, T), (1, 2, 2003, T), (8, 3, 2011, F), CREATE TABLE `employee` ( Employee_ID INT PRIMARY KEY, Name TEXT, Age INT, City TEXT ); Sample
 CREATE TABLE `hiring` ( Shop_ID INT REFERENCES shop(Shop_ID), Employee_ID INT PRIMARY KEY REFERENCES employee(Employee_ID), Start_from TEXT, Is_full_time bool ); Sample rows from `hiring`: (1, 1, 2009, T), (1, 2, 2003, T), (8, 3, 2011, F), 
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `shop` ( Shop_ID INT PRIMARY KEY, Name TEXT, Location TEXT, District TEXT, Number_products INT, Manager_name TEXT ); Sample rows from `shop`: (1, FC Haka, Valkeakoski, Tehtaan kenttä, 3516, Olli Huttunen), (2, HJK, Helsinki, Finnair Stadium, 10770, Antti Muurinen), (3, FC Honka, Espoo, Tapi
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), 
 SELECT COUNT(Document_ID) FROM Documents; 
 
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), 
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 N/ACREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER,
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), 
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), 
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 Ok,CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER,
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255) ); Sample rows from `templates`: (0, 5, PP, 2005-11-12 07:09:48, 2008-01-05 14:19:28, ), (1, 9
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 Ok, so CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255) ); Sample rows from `templates`: (0, 5, PP, 2005-11-12 07:09:48, 2008-01-05 14:19:28, ), (1
CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 SELECT Template_Type_Code FROM Ref_Template_Types;CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_E
 Ok,CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR
 SELECT * FROM Templates;CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255) ); Sample rows from `templates`: (0, 5, PP, 2005-11-12 07:09:48, 2008-01-05 14:19:28, ),
 CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255) ); Sample rows from `templates`: (0, 5, PP, 2005-11-12 07:09:48, 2008-01-05 14:19:28, ), (1, 9
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 
 CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255) ); Sample rows from `templates`: (0, 5, PP, 2005-11-12 07:09:48, 2008-01-05 14:19:28, ), (1, 9
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7,
CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 SELECT Template_Type_Code, Count(Document_ID) AS Count_of_Documents FROM Documents JOIN TemplatesCREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code),
 nCREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7,
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 SELECT * FROM Ref_Template_Types; Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), 
 SELECT * FROM Ref_Template_Types;CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), 
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), 
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), 
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 n/aCREATE TABLE `ref_template_types` ( Template_Type_Code CHAR(15) PRIMARY KEY, Template_Type_Description VARCHAR(255) ); Sample rows from `ref_template_types`: (PPT, Presentation), (CV, CV), (AD, Advertisement), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR
 CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type_Code CHAR(15) REFERENCES Ref_Template_Types(Template_Type_Code), Date_Effective_From DATETIME, Date_Effective_To DATETIME, Template_Details VARCHAR(255) ); Sample rows from `templates`: (0, 5, PP, 2005-11-12 07:09:48, 2008-01-05 14:19:28, ), (1, 9
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 Creating a view. CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 What are the paragraph texts for the document with the name 'Customer reviews'?,CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None),
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 Creating a view on `documents` table # CREATE VIEW Document_Paragraphs ( Document_ID INTEGER REFERENCES Documents(Document_ID), Paragraph_ID INTEGER REFERENCES Paragraphs(Paragraph_ID), Paragraph_Text VARCHAR(255), Other_Details VARCHAR(255) ); 
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 Ok, creating a database with the tables: Documents, Paragraphs, CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE
 Creating a new table called `documents` with the following columns: Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) #CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n
 NCREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `templates` ( Template_ID INTEGER, Version_Number INTEGER, Template_Type
CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 
 CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraphs` ( Paragraph_ID INTEGER, Document_ID INTEGER REFERENCES Documents
 Creating a sample database schema for a Refurbishment project. CREATE TABLE `documents` ( Document_ID INTEGER, Template_ID INTEGER REFERENCES Templates(Template_ID), Document_Name VARCHAR(255), Document_Description VARCHAR(255), Other_Details VARCHAR(255) ); Sample rows from `documents`: (0, 7, Introduction of OS, n, None), (1, 25, Understanding DB, y, None), (3, 6, Summer Show, u, None), CREATE TABLE `paragraph
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), 
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2, 5, 1), (2, 3, 3), (3, 2, 5), CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2, 5, 1), (2, 3, 3), (3, 2, 5), CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1
 CREATE TABLE `teacher` ( Teacher_ID INT PRIMARY KEY, Name TEXT, Age TEXT, Hometown TEXT ); Sample rows from `teacher`: (1, Joseph Huts, 32, Blackrod Urban District), (2, Gustaaf Deloor, 29, Bolton County Borough), (3, Vicente Carretero, 26, Farnworth Municipal Borough), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY
 CREATE TABLE `course` ( Course_ID INT PRIMARY KEY, Staring_Date TEXT, Course TEXT ); Sample rows from `course`: (1, 5 May, Language Arts), (2, 6 May, Math), (3, 7 May, Science), CREATE TABLE `course_arrange` ( Course_ID INT PRIMARY KEY REFERENCES course(Course_ID), Teacher_ID INT PRIMARY KEY REFERENCES teacher(Teacher_ID), Grade INT PRIMARY KEY ); Sample rows from `course_arrange`: (2,
 CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level_of_membership INT, Age INT ); Sample rows from `visitor`: (1, Gonzalo Higuaín, 8, 35), (2, Guti Midfielder, 5, 28), (3, Arjen Robben, 1, 27), 
 CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level_of_membership INT, Age INT ); Sample rows from `visitor`: (1, Gonzalo Higuaín, 8, 35), (2, Guti Midfielder, 5, 28), (3, Arjen Robben, 1, 27), 
 CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level_of_membership INT, Age INT ); Sample rows from `visitor`: (1, Gonzalo Higuaín, 8, 35), (2, Guti Midfielder, 5, 28), (3, Arjen Robben, 1, 27), 
 CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level_of_membership INT, Age INT ); Sample rows from `visitor`: (1, Gonzalo Higuaín, 8, 35), (2, Guti Midfielder, 5, 28), (3, Arjen Robben, 1, 27), 
 CREATE TABLE `museum` ( Museum_ID INT PRIMARY KEY, Name TEXT, Num_of_Staff INT, Open_Year TEXT ); Sample rows from `museum`: (1, Plaza Museum, 62, 2000), (2, Capital Plaza Museum, 25, 2012), (3, Jefferson Development Museum, 18, 2010), 
 CREATE TABLE `museum` ( Museum_ID INT PRIMARY KEY, Name TEXT, Num_of_Staff INT, Open_Year TEXT ); Sample rows from `museum`: (1, Plaza Museum, 62, 2000), (2, Capital Plaza Museum, 25, 2012), (3, Jefferson Development Museum, 18, 2010), 
 CREATE TABLE `museum` ( Museum_ID INT PRIMARY KEY, Name TEXT, Num_of_Staff INT, Open_Year TEXT ); Sample rows from `museum`: (1, Plaza Museum, 62, 2000), (2, Capital Plaza Museum, 25, 2012), (3, Jefferson Development Museum, 18, 2010), 
 CREATE TABLE `museum` ( Museum_ID INT PRIMARY KEY, Name TEXT, Num_of_Staff INT, Open_Year TEXT ); Sample rows from `museum`: (1, Plaza Museum, 62, 2000), (2, Capital Plaza Museum, 25, 2012), (3, Jefferson Development Museum, 18, 2010), 
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `museum` ( Museum_ID INT PRIMARY KEY, Name TEXT
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `museum` ( Museum_ID INT PRIMARY KEY, Name TEXT
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), 
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level
 CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level
CREATE TABLE `visit` ( Museum_ID INT PRIMARY KEY REFERENCES museum(Museum_ID), visitor_ID TEXT PRIMARY KEY REFERENCES visitor(ID), Num_of_Ticket INT, Total_spent REAL ); Sample rows from `visit`: (1, 5, 20, 320.14), (2, 5, 4, 89.98), (4, 3, 10, 320.44), CREATE TABLE `visitor` ( ID INT PRIMARY KEY, Name TEXT, Level
 CREATE TABLE `museum` ( Museum_ID INT PRIMARY KEY, Name TEXT, Num_of_Staff INT, Open_Year TEXT ); Sample rows from `museum`: (1, Plaza Museum, 62, 2000), (2, Capital Plaza Museum, 25, 2012), (3, Jefferson Development Museum, 18, 2010), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `losers` ( loser_id INT REFERENCES players(player_id), match_num INT REFERENCES matches(match_num), match_result TEXT, tourney_idCREATE TABLE `losers` ( loser_id INT REFERENCES players(player_id), match_num INT REFERENCES matches(match_num), match_result TEXT, tourney_id TEXT ); Sample rows from `losers`: (201474, 1, '6-3 6-4', 2013-W-WT-TUR-01A-2013),
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), CREATE TABLE `players` ( player_id
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `countries` ( country_code TEXT, country_name TEXT ); Sample rows from `countries`: (AFG, Afghanistan), (ALB, Albania), (ANDCREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana,
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `countries` ( country_code TEXT, country_name TEXT ); Sample rows from `countries`: (AFG, Afghanistan), (ALB, Albania), (ANDCREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana,
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), 
 CREATE TABLE `rankings` ( ranking_date DATE, ranking INT, player_id INT REFERENCES players(player_id), ranking_points INT, tours INT ); Sample rows from `rankings`: (20000101, 3, 200748, 4378, 13), (20000101, 4, 200033, 3021, 15), (20000101, 28, 200020, 960, 0), 
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `matches` ( best_of INT, draw_size INT, loser_age FLOAT, loser_entry TEXT, loser_hand TEXT, loser_ht INT, loser_id INT REFERENCES players(player_id), loser_ioc TEXT, loser_name TEXT, loser_rank INT, loser_rank_points INT, loser_seed INT, match_num INT, minutes INT, round TEXT, score TEXT, surface TEXT, tourney_date DATE, tourney_id TEXT, tourney_level TEXT, tourney_name TEXT, winner_age FLOAT,
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), CREATE TABLE
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `players` ( player_id INT PRIMARY KEY, first_name TEXT, last_name TEXT, hand TEXT, birth_date DATE, country_code TEXT ); Sample rows from `players`: (200001, Martina, Hingis, R, 19800930, SUI), (200002, Mirjana, Lucic, R, 19820309, CRO), (200003, Justine, Henin, R, 19820601, BEL), 
 CREATE TABLE `ship` ( lost_in_battle INT REFERENCES battle(id), id INT PRIMARY KEY, name TEXT, tonnage TEXT, ship_type TEXT, location TEXT, disposition_of_ship TEXT ); Sample rows from `ship`: (8, 1, Lettice, t, Brig, English Channel, Captured), (7, 2, Bon Accord, t, Brig, English Channel, Captured), (6, 3, Mary, t, Brig, English Channel, Capt
 CREATE TABLE `ship` ( lost_in_battle INT REFERENCES battle(id), id INT PRIMARY KEY, name TEXT, tonnage TEXT, ship_type TEXT, location TEXT, disposition_of_ship TEXT ); Sample rows from `ship`: (8, 1, Lettice, t, Brig, English Channel, Captured), (7, 2, Bon Accord, t, Brig, English Channel, Captured), (6, 3, Mary, t, Brig, English Channel, Capt
 CREATE TABLE `battle` ( id INT PRIMARY KEY, name TEXT, date TEXT, bulgarian_commander TEXT, latin_commander TEXT, result TEXT ); Sample rows from `battle`: (1, Battle of Adrianople, 14 April 1205, Kaloyan, Baldwin I, Bulgarian victory), (2, Battle of Serres, June 1205, Kaloyan, Unknown, Bulgarian victory), (3, Battle of Rusion, 31 January 1206,
 CREATE TABLE `death` ( caused_by_ship_id INT REFERENCES ship(id), id INT PRIMARY KEY, note TEXT, killed INT, injured INT ); Sample rows from `death`: (1, 1, Dantewada, Chhattisgarh, 8, 0), (2, 2, Dantewada, Chhattisgarh, 3, 0), (3, 13, Erraboru, Chhattisgarh, 25,
 CREATE TABLE `death` ( caused_by_ship_id INT REFERENCES ship(id), id INT PRIMARY KEY, note TEXT, killed INT, injured INT ); Sample rows from `death`: (1, 1, Dantewada, Chhattisgarh, 8, 0), (2, 2, Dantewada, Chhattisgarh, 3, 0), (3, 13, Erraboru, Chhattisgarh, 25,
 CREATE TABLE `death` ( caused_by_ship_id INT REFERENCES ship(id), id INT PRIMARY KEY, note TEXT, killed INT, injured INT ); Sample rows from `death`: (1, 1, Dantewada, Chhattisgarh, 8, 0), (2, 2, Dantewada, Chhattisgarh, 3, 0), (3, 13, Erraboru, Chhattisgarh, 25,
 CREATE TABLE `battle` ( id INT PRIMARY KEY, name TEXT, date TEXT, bulgarian_commander TEXT, latin_commander TEXT, result TEXT ); Sample rows from `battle`: (1, Battle of Adrianople, 14 April 1205, Kaloyan, Baldwin I, Bulgarian victory), (2, Battle of Serres, June 1205, Kaloyan, Unknown, Bulgarian victory), (3, Battle of Rusion, 31 January 1206,
 CREATE TABLE `ship` ( lost_in_battle INT REFERENCES battle(id), id INT PRIMARY KEY, name TEXT, tonnage TEXT, ship_type TEXT, location TEXT, disposition_of_ship TEXT ); Sample rows from `ship`: (8, 1, Lettice, t, Brig, English Channel, Captured), (7, 2, Bon Accord, t, Brig, English Channel, Captured), (6, 3, Mary, t, Brig, English Channel, Capt
 CREATE TABLE `death` ( caused_by_ship_id INT REFERENCES ship(id), id INT PRIMARY KEY, note TEXT, killed INT, injured INT ); Sample rows from `death`: (1, 1, Dantewada, Chhattisgarh, 8, 0), (2, 2, Dantewada, Chhattisgarh, 3, 0), (3, 13, Erraboru, Chhattisgarh, 25,
 CREATE TABLE `death` ( caused_by_ship_id INT REFERENCES ship(id), id INT PRIMARY KEY, note TEXT, killed INT, injured INT ); Sample rows from `death`: (1, 1, Dantewada, Chhattisgarh, 8, 0), (2, 2, Dantewada, Chhattisgarh, 3, 0), (3, 13, Erraboru, Chhattisgarh, 25,
 CREATE TABLE `battle` ( id INT PRIMARY KEY, name TEXT, date TEXT, bulgarian_commander TEXT, latin_commander TEXT, result TEXT ); Sample rows from `battle`: (1, Battle of Adrianople, 14 April 1205, Kaloyan, Baldwin I, Bulgarian victory), (2, Battle of Serres, June 1205, Kaloyan, Unknown, Bulgarian victory), (3, Battle of Rusion, 31 January 1206,
 SELECT COUNT(*) FROM battle; 
 CREATE TABLE `ship` ( lost_in_battle INT REFERENCES battle(id), id INT PRIMARY KEY, name TEXT, tonnage TEXT, ship_type TEXT, location TEXT, disposition_of_ship TEXT ); Sample rows from `ship`: (8, 1, Lettice, t, Brig, English Channel, Captured), (7, 2, Bon Accord, t, Brig, English Channel, Captured), (6, 3, Mary, t, Brig, English Channel, Capt
 CREATE TABLE `ship` ( lost_in_battle INT REFERENCES battle(id), id INT PRIMARY KEY, name TEXT, tonnage TEXT, ship_type TEXT, location TEXT, disposition_of_ship TEXT ); Sample rows from `ship`: (8, 1, Lettice, t, Brig, English Channel, Captured), (7, 2, Bon Accord, t, Brig, English Channel, Captured), (6, 3, Mary, t, Brig, English Channel, Capt
 CREATE TABLE `battle` ( id INT PRIMARY KEY, name TEXT, date TEXT, bulgarian_commander TEXT, latin_commander TEXT, result TEXT ); Sample rows from `battle`: (1, Battle of Adrianople, 14 April 1205, Kaloyan, Baldwin I, Bulgarian victory), (2, Battle of Serres, June 1205, Kaloyan, Unknown, Bulgarian victory), (3, Battle of Rusion, 31 January 1206,
 CREATE TABLE `death` ( caused_by_ship_id INT REFERENCES ship(id), id INT PRIMARY KEY, note TEXT, killed INT, injured INT ); Sample rows from `death`: (1, 1, Dantewada, Chhattisgarh, 8, 0), (2, 2, Dantewada, Chhattisgarh, 3, 0), (3, 13, Erraboru, Chhattisgarh, 25,
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_take` ( student_course_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES Semesters(semester_id
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), 
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `course_instructors` ( course_instructors_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), teacher_id INTEGER REFERENCES Teachers(teacher_id), course_recommended_from_teacher VARCHAR(
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `semester_courses` ( semester_course_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES Semesters(semester_id), grade_carried VARCHAR(255), grade
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `departments` ( department_id INTEGER, department_name VARCHAR(255), department_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `departments`: (1, computer science, error, None), (2, history, nostrum, None), (3, art, aliquam, None), CREATE TABLE `degree_programs` ( degree_program_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), degree_summary_name VARCHAR(255), degree_summary_description VARCHAR(255
CREATE TABLE `degree_programs` ( degree_program_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), degree_summary_name VARCHAR(255), degree_summary_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `degree_programs`: (1, 13, Master, architecto, None), (2, 2, Master, cumque, None), (3, 13, Master, placeat, None), CREATE TABLE `departments` ( department_id INTEGER,
CREATE TABLE `departments` ( department_id INTEGER, department_name VARCHAR(255), department_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `departments`: (1, computer science, error, None), (2, history, nostrum, None), (3, art, aliquam, None), CREATE TABLE `degree_programs` ( degree_program_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), degree_summary_name VARCHAR(255), degree_summary_description VARCHAR(255
CREATE TABLE `departments` ( department_id INTEGER, department_name VARCHAR(255), department_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `departments`: (1, computer science, error, None), (2, history, nostrum, None), (3, art, aliquam, None), CREATE TABLE `degree_programs` ( degree_program_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), degree_summary_name VARCHAR(255), degree_summary_description VARCHAR(255
CREATE TABLE `degree_programs` ( degree_program_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), degree_summary_name VARCHAR(255), degree_summary_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `degree_programs`: (1, 13, Master, architecto, None), (2, 2, Master, cumque, None), (3, 13, Master, placeat, None), CREATE TABLE `courses` ( course_id INTEGER,
CREATE TABLE `degrees` ( degree_program_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), degree_summary_name VARCHAR(255), degree_summary_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `degrees`: (1, 13, Master, architecto, None), (2, 2, Master, cumque, None), (3, 13, Master, placeat, None), 
CREATE TABLE `departments` ( department_id INTEGER, department_name VARCHAR(255), department_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `departments`: (1, computer science, error, None), (2, history, nostrum, None), (3, art, aliquam, None), CREATE TABLE `faculty` ( faculty_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `departments` ( department_id INTEGER, department_name VARCHAR(255), department_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `departments`: (1,
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `sections` ( section_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), section_name VARCHAR(255), section_description VARCHAR(255), other_details VARCHAR(255) ); Sample
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `sections` ( section_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), section_name VARCHAR(255), section_description VARCHAR(255), other_details VARCHAR(255) ); Sample
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `sections` ( section_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), section_name VARCHAR(255), section_description VARCHAR(255), other_details VARCHAR(255) ); Sample
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `section_instructors` ( section_id INTEGER PRIMARY KEY REFERENCES Sections(section_id), instructor_id INTEGER PRIMARY KEY REFERENCES Teachers(instructor_id), course_id INTEGER PRIMARY KEY REFERENCES Courses(course_id
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `sections` ( section_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), section_name VARCHAR(255), section_description VARCHAR(255), other_details VARCHAR(255) ); Sample
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `sections` ( section_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), section_name VARCHAR(255), section_description VARCHAR(255), other_details VARCHAR(255) ); Sample
CREATE TABLE `student_courses` ( student_course_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), course_completion CHAR(1), course_finance CHAR(1), date_completed DATETIME, date_enrolled DATETIME, date_finance_planned DATETIME, date_regrets_started DATETIME, date_regrets_stopped DATETIME, other_details VARCHAR(255) ); Sample rows from `student_courses`: (1, 11, 4, 1
rolCREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER
CREATE TABLE `departments` ( department_id INTEGER, department_name VARCHAR(255), department_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `departments`: (1, computer science, error, None), (2, history, nostrum, None), (3, art, aliquam, None), CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`:
CREATE TABLE `departments` ( department_id INTEGER, department_name VARCHAR(255), department_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `departments`: (1, computer science, error, None), (2, history, nostrum, None), (3, art, aliquam, None), CREATE TABLE `faculty` ( faculty_id INTEGER, department_id INTEGER REFERENCES Departments(department_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
EnrolCREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15
EnrolCREATE TABLE `student_master_backbow` ( student_id INTEGER REFERENCES Students(student_id), date_of_birth DATETIME, date_of_registrar_datetime, date_of_left DATETIME, date_of_registrar_datetime, surnname VARCHAR(255), first_name VARCHAR(80), middle_name VARCHAR(40), gender VARCHAR(1), other_details VARCHAR(255) ); Sample rows from `student_master_backbow`: (11, 1977-01-14 12:24:36,
CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), completion_date DATETIME, transcript_grade CHAR(1), other_details VARCHAR(255) ); Sample rows from `student_course_enrolment`: (1, 11, 2, 2016-11-21 18:44:18, B, None), (2, 7, 12, 201
CREATE TABLE `student_course_progress` ( student_course_id INTEGER, degree_program_id INTEGER REFERENCES Degree_Programs(degree_program_id), semester_id INTEGER REFERENCES Semesters(semester_id), student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), progress_code VARCHAR(10), date_last_progress_status DATETIME, other_details VARCHAR(255) ); Sample rows from `student_course_progress`: (1, 5, 14, 6, 2, a, 2016
EnrolCREATE TABLE `student_courses` ( student_course_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), performance CARACTER(50), completion_date DATETIME, other_details VARCHAR(255) ); Sample rows from `student_courses`: (1, 11, 2, a, 2017-02-28 18:24:36, None), (2, 7, 9, b, 2017-03-26
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
CREATE TABLE `semesters` ( semester_id INTEGER, semester_name VARCHAR(255), semester_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `semesters`: (1, spring 2010, x, None), (2, summer 2010, g, None), (3, fall 2010, w, None), 
CREATE TABLE `semesters` ( semester_id INTEGER, semester_name VARCHAR(255), semester_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `semesters`: (1, spring 2010, x, None), (2, summer 2010, g, None), (3, fall 2010, w, None), CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_enrolment_courses` ( student_course_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), student_enrolment_id INTEGER REFERENCES Student_Enrolment(student_enrol
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES
_idCREATE TABLE `student` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `student`: (1, 10, 15,
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
CREATE TABLE `transcript_of_results` ( transcript_of_results_id INTEGER, student_course_id INTEGER REFERENCES Student_Course_Results(student_course_id), degree_program_id INTEGER REFERENCES Degree_Programs(degree_program_id), semester_id INTEGER REFERENCES Semesters(semester_id), date_result_mailed DATETIME, date_result_obtained DATETIME, transcript_of_results_grade VARCHAR(255), supervisor_VDW_UParkyn CHAR(2), other_details VARCHAR(255) ); Sample rows from `transcript_of_results
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES
CREATE TABLE `student_courses` ( student_course_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), performance CARACTERS(1), completion_date DATETIME, transcript_details CARACTERS(1), other_details CARACTERS(255) ); Sample rows from `student_courses`: (1, 11, 2, a, 2017-02-28 21:52:12, None, None), (2, 7, 
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
rolCREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15,
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
EnrolCREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15
CREATE TABLE `student_grade` ( student_course_id INTEGER, teacher_id INTEGER REFERENCES Teachers(teacher_id), student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES Semesters(semester_id), grade CHAR(1), certification_date DATETIME, transcript_date DATETIME, recommendations VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `student_grade`: (1, 8, 6, 2, 6, so, 201
EnrolCREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia,
EnCREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_progress` ( student_course_id INTEGER, semester_id INTEGER REFERENCES Semesters(semester_id), course_id INTEGER REFERENCES Courses(course_id), student_id INTEGER REFERENCES Students(student_id
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_progress` ( student_course_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), student_id INTEGER REFERENCES Students(student_id), semester_id INTEGER REFERENCES Semesters(semester_id
CREATE TABLE `transcripts` ( transcript_id INTEGER, student_id INTEGER REFERENCES Students(student_id), semester_id INTEGER REFERENCES Semesters(semester_id), date_transcript_issued DATETIME, transcript_status VARCHAR(10), other_details VARCHAR(255) ); Sample rows from `transcripts`: (1, 19, 13, 2013-04-21 12:20:48, good, None), (2, 15, 4, 2013-02-26
CREATE TABLE `transcripts` ( transcript_id INTEGER, student_id INTEGER REFERENCES Students(student_id), degree_program_id INTEGER REFERENCES Degree_Programs(degree_program_id), semester_id INTEGER REFERENCES Semesters(semester_id), date_transcript_created DATETIME, date_transcript_issue_start DATETIME, date_transcript_issue_end DATETIME, transcripts_out_of_paper VARCHAR(255), transcripts_out_of_time VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `transcripts`: (1, 9
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_progress` ( student_course_id INTEGER, semester_id INTEGER REFERENCES Semesters(semester_id), course_id INTEGER REFERENCES Courses(course_id), student_id INTEGER REFERENCES Students(student_id
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_progress` ( student_course_id INTEGER, semester_id INTEGER REFERENCES Semesters(semester_id), course_id INTEGER REFERENCES Courses(course_id), student_id INTEGER REFERENCES Students(student_id
CREATE TABLE `transcripts` ( transcript_id INTEGER, student_enrolment_id INTEGER REFERENCES Student_Enrolment(student_enrolment_id), semester_id INTEGER REFERENCES Semesters(semester_id), date_transcript_created DATETIME, date_transcript_issue_started DATETIME, date_transcript_issue_completed DATETIME, recommendations VARCHAR(255), transcript_status VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `transcripts`: (1, 9, 13, 2016-
CREATE TABLE `transcripts` ( transcript_id INTEGER, student_id INTEGER REFERENCES Students(student_id), semester_id INTEGER REFERENCES Semesters(semester_id), date_transcript_issued DATETIME, course_id INTEGER REFERENCES Courses(course_id), transcript_status VARCHAR(10), other_details VARCHAR(255) ); Sample rows from `transcripts`: (1, 9, 13, 2016-08-06 12:20:06, 2, good, None), (2, 7
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_enrolment` ( student_course_enrolment_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), semester_id INTEGER REFERENCES
rolCREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `student_course_attendance` ( student_course_attendance_id INTEGER, student_id INTEGER REFERENCES Students(student_id), course_id INTEGER REFERENCES Courses(course_id), date_of_attendance DAT
CREATE TABLE `transcripts` ( transcript_id INTEGER, student_id INTEGER REFERENCES Students(student_id), semester_id INTEGER REFERENCES Semesters(semester_id), date_transcript_created DATETIME, date_transcript_updated DATETIME, transcripts_summary VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `transcripts`: (1, 9, 13, 2010-10-16 12:28:47, 2010-11-28 12:17:12,
CREATE TABLE `student_enrolment` ( student_enrolment_id INTEGER, degree_program_id INTEGER REFERENCES Degree_Programs(degree_program_id), semester_id INTEGER REFERENCES Semesters(semester_id), student_id INTEGER REFERENCES Students(student_id), other_details VARCHAR(255) ); Sample rows from `student_enrolment`: (1, 12, 13, 14, None), (2, 4, 2, 9, None), (3, 10, 2,
CREATE TABLE `semester_student_enrolment` ( student_enrolment_id INTEGER REFERENCES Student_Enrolment(student_enrolment_id), student_id INTEGER REFERENCES Students(student_id), semester_id INTEGER REFERENCES Semesters(semester_id), grade CHAR(1), semester_grade CARACTERS(255), other_details VARCHAR(255) ); Sample rows from `semester_student_enrolment`: (1, 12, 8, a, None, None), (2, 7, 12,
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
CREATE TABLE `students` ( student_id INTEGER, current_address_id INTEGER REFERENCES Addresses(address_id), permanent_address_id INTEGER REFERENCES Addresses(address_id), first_name VARCHAR(80), middle_name VARCHAR(40), last_name VARCHAR(40), cell_mobile_number VARCHAR(40), email_address VARCHAR(40), ssn VARCHAR(40), date_first_registered DATETIME, date_left DATETIME, other_student_details VARCHAR(255) ); Sample rows from `students`: (1, 10, 15, Tim
CREATE TABLE `addresses` ( address_id INTEGER, line_1 VARCHAR(255), line_2 VARCHAR(255), line_3 VARCHAR(255), city VARCHAR(255), zip_postcode VARCHAR(20), state_province_county VARCHAR(255), country VARCHAR(255), other_address_details VARCHAR(255) ); Sample rows from `addresses`: (1, 2294 Grant Square Apt. 235, Apt. 370, None, Port Chelsea, 148, Virginia, Iceland,
CREATE TABLE `courses` ( course_id INTEGER, course_name VARCHAR(255), course_description VARCHAR(255), other_details VARCHAR(255) ); Sample rows from `courses`: (1, ds, p, None), (2, math, q, None), (3, os, v, None), CREATE TABLE `sections` ( section_id INTEGER, course_id INTEGER REFERENCES Courses(course_id), section_name VARCHAR(255), section_description VARCHAR(255), other_details VARCHAR(255) ); Sample
CREATE TABLE `student_teaches` ( student_id INTEGER PRIMARY KEY REFERENCES Students(student_id), course_id INTEGER PRIMARY KEY REFERENCES Courses(course_id), date_teacher_starts LAVDATE, date_teacher_ends LAVDATE, other_details VARCHAR(255) ); Sample rows from `student_teaches`: (2, 6, 2016-07-18 12:09:13, 1976-05-11 18:12:21, None), (14, 2
_idCREATE TABLE `student_of_department` ( student_id INTEGER REFERENCES Students(student_id), department_id INTEGER REFERENCES Departments(department_id), date_joined DATETIME, date_left DATETIME, placement_id INTEGER REFERENCES Departments(placement_id), other_details VARCHAR(255) ); Sample rows from `student_of_department`: (5, 6, 2010-04-23 17:24:34, 1972-06-12 22:55:36, 8, None),
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `TV_Channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_Channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_Channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_Channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_Channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_Channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `TV_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `TV_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `TV_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `TV_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `TV_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `TV_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `tv_series` ( id REAL PRIMARY KEY, Episode TEXT, Air_Date TEXT, Rating TEXT, Share REAL, 18_49_Rating_Share TEXT, Viewers_m TEXT, Weekly_Rank REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `tv_series`: (1.0, A Love of a Lifetime, September 24, 2007, 5.8, 9.0, 3.5/9, 9.16
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_Channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_Channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `TV_Channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `TV_Channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `cartoon` ( id REAL PRIMARY KEY, Title TEXT, Directed_by TEXT, Written_by TEXT, Original_air_date TEXT, Production_code REAL, Channel TEXT REFERENCES TV_Channel(id) ); Sample rows from `cartoon`: (1.0, The Rise of the Blue Beetle!, Ben Jones, Michael Jelenic, November14,2008, 101.0, 700), (2.0, Terror on Dinosaur Island!, Brandon Vietti, Steven Melching,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `tv_channel` ( id TEXT PRIMARY KEY, series_name TEXT, Country TEXT, Language TEXT, Content TEXT, Pixel_aspect_ratio_PAR TEXT, Hight_definition_TV TEXT, Pay_per_view_PPV TEXT, Package_Option TEXT ); Sample rows from `tv_channel`: (700, Sky Radio, Italy, Italian, music, 4:3, no, no, Sky Famiglia), (701, Sky Music, Italy, Italian, music, 4:3, no,
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `poker_player` ( Poker_Player_ID INT PRIMARY KEY, People_ID INT REFERENCES people(People_ID), Final_Table_Made REAL, Best_Finish REAL, Money_Rank REAL, Earnings REAL ); Sample rows from `poker_player`: (1, 1, 42.0, 1.0, 68.0, 476090.0), (2, 2, 10.0, 2.0, 141.0
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `people` ( People_ID INT PRIMARY KEY, Nationality TEXT, Name TEXT, Birth_Date TEXT, Height REAL ); Sample rows from `people`: (1, Russia, Aleksey Ostapenko, May 26, 1986, 207.0), (2, Bulgaria, Teodor Salparov, August 16, 1982, 182.0), (3, Russia, Roman Bragin, April 17, 1987, 
 CREATE TABLE `area_code_state` ( area_code INTEGER, state varchar(2) ); Sample rows from `area_code_state`: (201, NJ), (202, DC), (203, CT), 
 CREATE TABLE `contestants` ( contestant_number INTEGER, contestant_name varchar(50) ); Sample rows from `contestants`: (1, Edwina Burnam), (2, Tabatha Gehling), (3, Kelly Clauss), 
 
 CREATE TABLE `area_code_state` ( area_code INTEGER, state varchar(2) ); Sample rows from `area_code_state`: (201, NJ), (202, DC), (203, CT), 
 
 CREATE TABLE `contestants` ( contestant_number INTEGER, contestant_name varchar(50) ); Sample rows from `contestants`: (1, Edwina Burnam), (2, Tabatha Gehling), (3, Kelly Clauss), CREATE TABLE `votes` ( vote_id INTEGER, phone_number INTEGER PRIMARY KEY, state varchar(2) REFERENCES AREA_CODE_STATE(state), contestant_number INTEGER REFERENCES CONTESTANTS(contestant_number), created timestamp ); Sample rows from `votes`: (1,
 CREATE TABLE `area_code_state` ( area_code INTEGER, state varchar(2) ); Sample rows from `area_code_state`: (201, NJ), (202, DC), (203, CT), CREATE TABLE `votes` ( vote_id INTEGER, phone_number INTEGER PRIMARY KEY, state varchar(2) REFERENCES AREA_CODE_STATE(state), contestant_number INTEGER REFERENCES CONTESTANTS(contestant_number), created timestamp ); Sample rows from `votes`: (1, 7182887233, NY,
 CREATE TABLE `votes` ( vote_id INTEGER, phone_number INTEGER PRIMARY KEY, state varchar(2) REFERENCES AREA_CODE_STATE(state), contestant_number INTEGER REFERENCES CONTESTANTS(contestant_number), created timestamp ); Sample rows from `votes`: (1, 7182887233, NY, 2, 2018-03-09 19:03:21), (2, 7148407040, NY, 3, 2018-03-09 19:
 CREATE TABLE `votes` ( vote_id INTEGER, phone_number INTEGER PRIMARY KEY, state varchar(2) REFERENCES AREA_CODE_STATE(state), contestant_number INTEGER REFERENCES CONTESTANTS(contestant_number), created timestamp ); Sample rows from `votes`: (1, 7182887233, NY, 2, 2018-03-09 19:03:21), (2, 7148407040, NY, 3, 2018-03-09 19:
 
 
 CREATE TABLE `area_code_state` ( area_code INTEGER, state varchar(2) ); Sample rows from `area_code_state`: (201, NJ), (202, DC), (203, CT), CREATE TABLE `votes` ( vote_id INTEGER, phone_number INTEGER PRIMARY KEY, state varchar(2) REFERENCES AREA_CODE_STATE(state), contestant_number INTEGER REFERENCES CONTESTANTS(contestant_number), created timestamp ); Sample rows from `votes`: (1, 7182887233, NY,
 
CREATE TABLE `area_code_state` ( area_code INTEGER, state varchar(2) ); Sample rows from `area_code_state`: (201, NJ), (202, DC), (203, CT), CREATE TABLE `votes` ( vote_id INTEGER, phone_number INTEGER PRIMARY KEY, state varchar(2) REFERENCES AREA_CODE_STATE(state), contestant_number INTEGER REFERENCES CONTESTANTS(contestant_number), created timestamp ); Sample rows from `votes`: (1, 7182887233, NY,
 CREATE TABLE `contestants` ( contestant_number INTEGER, contestant_name varchar(50) ); Sample rows from `contestants`: (1, Edwina Burnam), (2, Tabatha Gehling), (3, Kelly Clauss), 
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `country` ( Code char
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 Using 4079 as data sample,CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country`
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 SELECT * FROM country;CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 SELECT * FROM country WHERE Continent = 'Asia' AND LifeExpectancy = 70.0;CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), 
 CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), 
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), 
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), 
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 
 SELECT * FROM countrylanguage WHERE CountryCode = 'ABCREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE
 SELECT * FROM countrylanguage WHERE CountryCode = 'AFG';CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7),
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 Creating table countrylanguage from full_database_schema.CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), 
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 Creating a new database schema.CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 SELECT * FROM countrylanguage;CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), 
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), 
 Using `countrylanguage`,###full_database_schema: CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `country` ( Code char
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `country` ( Code char
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 SELECT * FROM countrylanguage WHERE CountryCode IN(CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 SELECT * FROM countryCREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 SELECT * FROM country;CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `country` ( Code char
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 SELECT country.Name, country.PopulationCREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` (
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `district` ( District char
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `country` ( Code char
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 SELECT Name, SurfaceAreaCREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
 CREATE TABLE `country` ( Code char(3) PRIMARY KEY, Name char(52), Continent TEXT, Region char(26), SurfaceArea float(10,2), IndepYear INTEGER, Population INTEGER, LifeExpectancy float(3,1), GNP float(10,2), GNPOld float(10,2), LocalName char(45), GovernmentForm char(45), HeadOfState char(60), Capital INTEGER, Code2 char(2) ); Sample rows
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `country` ( Code char
CREATE TABLE `city` ( ID INTEGER, Name char(35), CountryCode char(3) PRIMARY KEY REFERENCES country(Code), District char(20), Population INTEGER ); Sample rows from `city`: (1, Kabul, AFG, Kabol, 1780000), (2, Qandahar, AFG, Qandahar, 237500), (3, Herat, AFG, Herat, 186800), CREATE TABLE `country` ( Code char
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
CREATE TABLE `countrylanguage` ( CountryCode char(3) PRIMARY KEY REFERENCES country(Code), Language char(30) PRIMARY KEY, IsOfficial TEXT, Percentage float(4,1) ); Sample rows from `countrylanguage`: (ABW, Dutch, T, 5.3), (ABW, English, F, 9.5), (ABW, Papiamento, F, 76.7), CREATE TABLE `country` ( Code char(3) PRIMARY KEY
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `show` ( Show_ID INT, Performance_ID INT REFERENCES performance(Performance_ID), If_first_show bool, Result TEXT, Attendance REAL ); Sample rows from `show`: (1, 1, Glebe Park, T, 1026.0), (2, 2, Fir Park, T, 695.0), (3, 3, St. Mirren Park, F, 555.0), 
 CREATE TABLE `show` ( Show_ID INT, Performance_ID INT REFERENCES performance(Performance_ID), If_first_show bool, Result TEXT, Attendance REAL ); Sample rows from `show`: (1, 1, Glebe Park, T, 1026.0), (2, 2, Fir Park, T, 695.0), (3, 3, St. Mirren Park, F, 555.0), 
 CREATE TABLE `performance` ( Performance_ID INT PRIMARY KEY, Orchestra_ID INT REFERENCES orchestra(Orchestra_ID), Type TEXT, Date TEXT, Official_ratings_(millions) REAL, Weekly_rank TEXT, Share TEXT ); Sample rows from `performance`: (1, 1, Auditions 1, 9 June, 5.2, 12, 22.7%), (2, 2, Auditions 2, 10 June, 6.73, 8,
 CREATE TABLE `performance` ( Performance_ID INT PRIMARY KEY, Orchestra_ID INT REFERENCES orchestra(Orchestra_ID), Type TEXT, Date TEXT, Official_ratings_(millions) REAL, Weekly_rank TEXT, Share TEXT ); Sample rows from `performance`: (1, 1, Auditions 1, 9 June, 5.2, 12, 22.7%), (2, 2, Auditions 2, 10 June, 6.73, 8,
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), 
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT,
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `conductor` ( Conductor_ID INT PRIMARY KEY, Name TEXT, Age INT, Nationality TEXT, Year_of_Work INT ); Sample rows from `conductor`: (1, Antal Doráti, 40, USA, 10), (2, Igor Stravinsky, 41, UK, 11), (3, Colin Davis, 42, USA, 6), CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `orchestra` ( Orchestra_ID INT PRIMARY KEY, Orchestra TEXT, Conductor_ID INT REFERENCES conductor(Conductor_ID), Record_Company TEXT, Year_of_Founded REAL, Major_Record_Format TEXT ); Sample rows from `orchestra`: (1, London Symphony Orchestra, 1, Mercury Records, 2003.0, CD), (2, Columbia Symphony Orchestra, 2, Columbia Masterworks, 2009.0, CD / LP), (3,
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), 
 CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510, 1689), (1689, 1709), CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel
 CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510, 1689), (1689, 1709), CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510, 1689), (1689, 1709), CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel
CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510, 1689), (1689, 1709), CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel
 CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510, 1689), (1689, 1709), CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel
CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510, 1689), (1689, 1709), CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709, 1689), (1782, 1709), 
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 N/ACREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 Creating a table of highschoolers. CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `likes` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), liked_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `likes`: (1689, 1709), (1709
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
 CREATE TABLE `highschooler` ( ID INT PRIMARY KEY, name TEXT, grade INT ); Sample rows from `highschooler`: (1510, Jordan, 9), (1689, Gabriel, 9), (1381, Tiffany, 9), CREATE TABLE `friend` ( student_id INT PRIMARY KEY REFERENCES Highschooler(ID), friend_id INT PRIMARY KEY REFERENCES Highschooler(ID) ); Sample rows from `friend`: (1510, 1381), (1510
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
213CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example

CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
7CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
CREATE TABLE `professionals` ( professional_id INTEGER, role_code VARCHAR(10), first_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), last_name VARCHAR(50), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `professionals`: (1, Employee, Taryn, 6915 Oberbrunner Point Suite 491 Gleasonville, LA
CREATE TABLE `professional_pets` ( professional_id INTEGER REFERENCES Professionals(professional_id) REFERENCES Professionals(professional_id), pet_id INTEGER REFERENCES Pets(pet_id) REFERENCES Pets(pet_id), date_fully_housebroken DATETIME, date_housebroken_started DATETIME, date_housebroken_ended DATETIME ); Sample rows from `professional_pets`: (5, 8, 2017-09-10 15:04:20, 2017-12-28 05
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
27,CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn
,CREATE TABLE `professional_dogs` ( professional_id INTEGER PRIMARY KEY REFERENCES Professionals(professional_id), dog_id INTEGER PRIMARY KEY REFERENCES Dogs(dog_id) REFERENCES Dogs(dog_id), date_treatment_start DATETIME PRIMARY KEY, date_treatment_end DATETIME ); Sample rows from `professional_dogs`: (10, 5, 2017-07-21 00:49:12, 2018-03-25 03:09:28), (14, 
,CREATE TABLE `professional_treatment_of_pets` ( professional_id INTEGER REFERENCES Professionals(professional_id) REFERENCES Professionals(professional_id), pet_id INTEGER REFERENCES Pets(pet_id) REFERENCES Pets(pet_id), date_of_treatment DATETIME, treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment_type_code), comment VARCHAR(20) ); Sample rows from `professional_treatment_of_pets`: (10, 6, 2018-03-28 02:
CREATE TABLE `breeds` ( breed_code VARCHAR(10) PRIMARY KEY, breed_name VARCHAR(80) ); Sample rows from `breeds`: (ESK, Eskimo), (HUS, Husky), (BUL, Bulldog), CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(10)
, MarylandCREATE TABLE `breeds` ( breed_code VARCHAR(10) PRIMARY KEY, breed_name VARCHAR(80) ); Sample rows from `breeds`: (ESK, Eskimo), (HUS, Husky), (BUL, Bulldog), CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(
 KA,CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `treatment_types`: (EXAM, Physical examination),
,CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `treatment_types`: (EXAM, Physical examination
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example

CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `treatment_types`: (EXAM, Physical examination), (VAC, Vaccination), (WALK, Take for a Walk), CREATE TABLE `treatments` ( treatment_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id), dog_id INTEGER REFERENCES Dogs(dog_id), treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment
CREATE TABLE `professional_treatment_types` ( professional_id INTEGER REFERENCES Professionals(professional_id) REFERENCES Professionals(professional_id), treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment_type_code), min_hours FLOAT, max_hours FLOAT ); Sample rows from `professional_treatment_types`: (10, EXAM, 10.0, 50.0), (3, VAC, 20.0, 98.0), (8, EXAM, 22.
CREATE TABLE `professional_dog_treatment` ( professional_id INTEGER PRIMARY KEY REFERENCES Professionals(professional_id), dog_id INTEGER PRIMARY KEY REFERENCES Dogs(dog_id), treatment_date DATETIME PRIMARY KEY, treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment_type_code), charge_amount DECIMAL(19,4) ); Sample rows from `professional_dog_treatment`: (10, 3, 2018-03-24 09:27:16, VAC, 
 KA,CREATE TABLE `professional_dogs` ( professional_id INTEGER PRIMARY KEY REFERENCES Professionals(professional_id), dog_id INTEGER PRIMARY KEY REFERENCES Dogs(dog_id) REFERENCES Dogs(dog_id), date_started DATETIME PRIMARY KEY, date_ended DATETIME ); Sample rows from `professional_dogs`: (2, 6, 2017-07-17 00:49:18, 2018-03-24 03:09:15), (14, 1,
7CREATE TABLE `professional_dogs` ( professional_id INTEGER PRIMARY KEY REFERENCES Professionals(professional_id), dog_id INTEGER PRIMARY KEY REFERENCES Dogs(dog_id) REFERENCES Dogs(dog_id), date_treated DATETIME PRIMARY KEY, date_ended DATETIME ); Sample rows from `professional_dogs`: (10, 3, 2017-09-05 02:42:46, 2018-03-25 05:08:25), (10, 6,
,CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `treatment_types`: (EXAM, Physical examination), (VAC, Vaccination), (WALK, Take for a Walk), CREATE TABLE `treatments` ( treatment_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id), dog_id INTEGER REFERENCES Dogs(dog_id), treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment
CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `Treatment_Types`: (EXAM, Physical examination),
CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `treatment_types`: (EXAM, Physical examination), (VAC, Vaccination), (WALK, Take for a Walk), CREATE TABLE `treat_dogs` ( dog_id INTEGER PRIMARY KEY REFERENCES Dogs(dog_id), treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment_type_code), charge_id INTEGER REFERENCES Charges(charge
,CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `breeds` ( breed_code VARCHAR(10) PRIMARY KEY, breed_name VARCHAR(80) ); Sample rows from `breeds`: (ESK, Eskimo), (HUS, Husky), (BUL, Bulldog), CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(10)
ette,CREATE TABLE `breeds` ( breed_code VARCHAR(10) PRIMARY KEY, breed_name VARCHAR(80) ); Sample rows from `breeds`: (ESK, Eskimo), (HUS, Husky), (BUL, Bulldog), CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example

CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
etteCREATE TABLE `professional_dog_ownership` ( professional_id INTEGER PRIMARY KEY REFERENCES Professionals(professional_id), dog_id INTEGER PRIMARY KEY REFERENCES Dogs(dog_id), date_of_ownership_start DATETIME, date_of_ownership_end DATETIME ); Sample rows from `professional_dog_ownership`: (10, 5, 2017-07-23 00:58:34, 2018-03-25 19:24:58), (10, 11,
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
7CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `dates_of_arrival_and_departure` ( dog_id INTEGER REFERENCES Dogs(dog_id), date_arrived DATETIME, date_departed DATETIME ); Sample rows from `dates_of_arrival_and_departure`: (1, 2014-07-10 00:26:36, 2018-03-25 06:58:44), (2, 2017-12-22 05:02:02, 2018-03-25
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `treatment_types`: (EXAM, Physical examination), (VAC, Vaccination), (WALK, Take for a Walk), CREATE TABLE `treatments` ( treatment_id INTEGER, dog_id INTEGER REFERENCES Dogs(dog_id) REFERENCES Dogs(dog_id), treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment_type_code),
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
...  CREATE TABLE `treatment_procedures` ( procedure_id INTEGER, treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment_type_code), name VARCHAR(50) ); Sample rows from `treatment_procedures`: (1, VAC, Vaccination), (2, EXAM, Physical examination), (3, WALK, Take for a Walk), CREATE TABLE `treatment_procedures_dogs` ( procedure_id INTEGER REFERENCES Treatment_Procedures(procedure_id), dog_id INTEGER
CREATE TABLE `professionals` ( professional_id INTEGER, role_code VARCHAR(10), first_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), last_name VARCHAR(50), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `professionals`: (1, Employee, Taryn, 6915 Oberbrunner Point Suite 491 Gleasonville, LA
burgCREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
burghCREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
burgCREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
21951CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(10) REFERENCES Sizes(size_code), name VARCHAR(50), age VARCHAR(20), date_of_birth DATETIME, gender VARCHAR(1), weight VARCHAR(20), date_arrived DATETIME, date_adopted DATETIME, date_departed DATETIME
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
02CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `owner_pets` ( owner_id INTEGER REFERENCES Owners(owner_id), pet_id INTEGER REFERENCES Pets(pet_id), owner_pets_id INTEGER ); Sample rows from `owner_pets`: (
 21951CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `treatment_types` ( treatment_type_code VARCHAR(10) PRIMARY KEY, treatment_type_description VARCHAR(80) ); Sample rows from `treatment_types`: (EXAM,
POMerl...CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
TheCREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
, MississippiCREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn
CREATE TABLE `professionals` ( professional_id INTEGER, role_code VARCHAR(10), first_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), last_name VARCHAR(50), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `professionals`: (1, Employee, Taryn, 6915 Oberbrunner Point Suite 491 Gleasonville, LA
CREATE TABLE `professional_pets` ( professional_id INTEGER REFERENCES Professionals(professional_id) REFERENCES Professionals(professional_id), dog_id INTEGER REFERENCES Dogs(dog_id) REFERENCES Dogs(dog_id), date_of_visit BEGIN DATETIME, date_of_visit_end DATETIME ); Sample rows from `professional_pets`: (10, 6, 2018-03-28 01:07:18, 2018-04-06 01:07:18), (15, 
CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(10) REFERENCES Sizes(size_code), name VARCHAR(50), age VARCHAR(20), date_of_birth DATETIME, gender VARCHAR(1), weight VARCHAR(20), date_arrived DATETIME, date_adopted DATETIME, date_departed DATETIME ); Sample
TrystanCREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(10) REFERENCES Sizes(size_code), name VARCHAR(50), age VARCHAR(20), date_of_birth DATETIME, gender VARCHAR(1), weight VARCHAR(20), date_arrived DATETIME, date_adopted DATETIME, date_departed DAT
2197CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn
95CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81
32CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81

CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(10) REFERENCES Sizes(size_code), name VARCHAR(50), age VARCHAR(20), date_of_birth DATETIME, gender VARCHAR(1), weight VARCHAR(20), date_arrived DATETIME, date_adopted DATETIME, date_departed DATETIME );
CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(
CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `daily_accommodation` ( stay_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id), dog_id INTEGER REFERENCES Dogs(dog_id), stay_start_datetime DATETIME, stay_end_datetime DATETIME
21951CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `pet_owner_pets` ( owner_id INTEGER PRIMARY KEY REFERENCES Owners(owner_id), pet_id INTEGER PRIMARY KEY REFERENCES Pets(pet_id), date_created DATETIME PRIMARY KEY, date_visited
CREATE TABLE `charges` ( charge_id INTEGER, charge_type VARCHAR(10), charge_amount DECIMAL(19,4) ); Sample rows from `charges`: (1, Daily Accommodation, 98), (2, Drugs, 322), (3, Health Check, 640), CREATE TABLE `owner_pets` ( owner_id INTEGER PRIMARY KEY REFERENCES Owners(owner_id), pet_id INTEGER PRIMARY KEY REFERENCES Pets(pet_id), owner_pets_id INTEGER ); Sample rows from `owner_p
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn81@example
CREATE TABLE `breeds` ( breed_code VARCHAR(10) PRIMARY KEY, breed_name VARCHAR(80) ); Sample rows from `breeds`: (ESK, Eskimo), (HUS, Husky), (BUL, Bulldog), CREATE TABLE `sizes` ( size_code VARCHAR(10) PRIMARY KEY, size_description VARCHAR(80) ); Sample rows from `sizes`: (SML, Small), (MED, Medium), (LGE, Large), 
CREATE TABLE `breeds` ( breed_code VARCHAR(10) PRIMARY KEY, breed_name VARCHAR(80) ); Sample rows from `breeds`: (ESK, Eskimo), (HUS, Husky), (BUL, Bulldog), CREATE TABLE `dogs` ( dog_id INTEGER, owner_id INTEGER REFERENCES Owners(owner_id) REFERENCES Owners(owner_id), abandoned_yn VARCHAR(1), breed_code VARCHAR(10) REFERENCES Breeds(breed_code), size_code VARCHAR(10)
7CREATE TABLE `professional_dogs` ( professional_id INTEGER PRIMARY KEY REFERENCES Professionals(professional_id), dog_id INTEGER PRIMARY KEY REFERENCES Dogs(dog_id), date_of_treatment DATETIME PRIMARY KEY, treatment_type_code VARCHAR(10) REFERENCES Treatment_Types(treatment_type_code), comment VARCHAR(20) ); Sample rows from `professional_dogs`: (8, 6, 2018-03-25 10:25:46, EXAM, ), (3, 1
ette,CREATE TABLE `owners` ( owner_id INTEGER, first_name VARCHAR(50), last_name VARCHAR(50), street VARCHAR(50), city VARCHAR(50), state VARCHAR(20), zip_code VARCHAR(20), email_address VARCHAR(50), home_phone VARCHAR(20), cell_number VARCHAR(20) ); Sample rows from `owners`: (1, Nora, Haley, 0647 Hintz Village Apt. 024, Lake Tia, Wisconsin, 93165, lynn
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 
 CREATE TABLE `song` ( Song_ID INT PRIMARY KEY, Title TEXT, Singer_ID INT REFERENCES singer(Singer_ID), Sales REAL, Highest_Position REAL ); Sample rows from `song`: (1, Do They Know It's Christmas, 1, 1094000.0, 1.0), (2, F**k It (I Don't Want You Back), 1, 552407.0, 1.0), (3, Cha Cha Slide, 2
 CREATE TABLE `song` ( Song_ID INT PRIMARY KEY, Title TEXT, Singer_ID INT REFERENCES singer(Singer_ID), Sales REAL, Highest_Position REAL ); Sample rows from `song`: (1, Do They Know It's Christmas, 1, 1094000.0, 1.0), (2, F**k It (I Don't Want You Back), 1, 552407.0, 1.0), (3, Cha Cha Slide, 2
 CREATE TABLE `song` ( Song_ID INT PRIMARY KEY, Title TEXT, Singer_ID INT REFERENCES singer(Singer_ID), Sales REAL, Highest_Position REAL ); Sample rows from `song`: (1, Do They Know It's Christmas, 1, 1094000.0, 1.0), (2, F**k It (I Don't Want You Back), 1, 552407.0, 1.0), (3, Cha Cha Slide, 2
 
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `song` ( Song_ID INT PRIMARY KEY, Title TEXT, Singer_ID INT REFERENCES singer(Singer_ID), Sales REAL, Highest_Position REAL ); Sample rows from `song`: (1, Do They Know It's Christmas, 1, 1094000.0, 1.0), (2, F**k It (I Don't Want You Back), 1, 552407.0, 1.0), (3, Cha Cha Slide, 2
 N/A,CREATE TABLE `song` ( Song_ID INT PRIMARY KEY, Title TEXT, Singer_ID INT REFERENCES singer(Singer_ID), Sales REAL, Highest_Position REAL ); Sample rows from `song`: (1, Do They Know It's Christmas, 1, 1094000.0, 1.0), (2, F**k It (I Don't Want You Back), 1, 552407.0, 1.0), (3, Cha Cha Slide
 CREATE TABLE `song` ( Song_ID INT PRIMARY KEY, Title TEXT, Singer_ID INT REFERENCES singer(Singer_ID), Sales REAL, Highest_Position REAL ); Sample rows from `song`: (1, Do They Know It's Christmas, 1, 1094000.0, 1.0), (2, F**k It (I Don't Want You Back), 1, 552407.0, 1.0), (3, Cha Cha Slide, 2
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 CREATE TABLE `singer` ( Singer_ID INT PRIMARY KEY, Name TEXT, Birth_Year REAL, Net_Worth_Millions REAL, Citizenship TEXT ); Sample rows from `singer`: (1, Liliane Bettencourt, 1944.0, 30.0, France), (2, Christy Walton, 1948.0, 28.8, United States), (3, Alice Walton, 1949.0, 26.3, United States
 
 OK, here you go:CREATE TABLE `other_available_features` ( feature_id INTEGER, feature_type_code VARCHAR(20) REFERENCES Ref_Feature_Types(feature_type_code), feature_name VARCHAR(80), feature_description VARCHAR(80) ); Sample rows from `other_available_features`: (2, Amenity, AirCon, Air Conditioning.), (3, Amenity, Pool, Swimming Pool.), (4, Security, BurglarAlarm, Burglar Alarm), CREATE TABLE `ref_feature_types` (
 CREATE TABLE `other_property_features` ( property_id INTEGER REFERENCES Properties(property_id), feature_id INTEGER REFERENCES Other_Available_Features(feature_id), property_feature_description VARCHAR(80) ); Sample rows from `other_property_features`: (15, 3, dolorem), (12, 4, earum), (6, 2, illo), CREATE TABLE `other_available_features` ( feature_id INTEGER, feature_type_code VARCHAR(20) REFERENCES Ref_Feature_Types(feature_type_code),
 CREATE TABLE `other_property_features` ( property_id INTEGER REFERENCES Properties(property_id), feature_id INTEGER REFERENCES Other_Available_Features(feature_id), property_feature_description VARCHAR(80) ); Sample rows from `other_property_features`: (15, 3, dolorem), (12, 4, earum), (6, 2, illo), CREATE TABLE `properties` ( property_id INTEGER, property_type_code VARCHAR(20) REFERENCES Ref_Property_Types(property_type_code), date_on_market
